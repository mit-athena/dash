.TH CONSOLE 8 "9 August 1991"
.ds ]W MIT Project Athena
.SH NAME
console \- X console window
.SH SYNOPSIS
.nf
console [-blink \fImilliseconds\fR] [-unmap \fIseconds\fR] [\(+-map]
        [-global] [-nosession]
.fi
.SH DESCRIPTION
The \fIconsole\fR program reads standard input and displays it
in an X window on the screen.  It is intended to be started by \fIdm\fR with
its input connected to the logical console for the workstation.  Its
default behavior is to start up unmapped (not visible on the screen),
reading its initial buffer contents from \fI/var/athena/console.log\fR. 
It will map itself (i.e. become visible on the screen) whenever
there is new input.  The user may then click its "Hide"
button to hide the window again until new input comes.  
For other available behaviors, see below.
.SH SIGNALS
\fIConsole\fR takes the following signals, which are usually sent to
it by \fIconfig_console\fR, \fIdm\fR, or \fInanny\fR:
.TP 8
.B SIGHUP
On a hangup signal, \fIconsole\fR attempts to dump the contents
of its text buffer to \fI/var/athena/console.log\fR, and then exits. (\fIDm\fR
will then usually restart it.)
.TP 8
.B SIGFPE
On an FPE signal, \fIconsole\fR zeroes its text buffer, attempts to
zero \fI/var/athena/console.log\fR, and unmaps its window.
.TP 8
.B SIGUSR1
On a USR1 signal, \fIconsole\fR maps its window.
.TP 8
.B SIGUSR2
On a USR2 signal, \fIconsole\fR unmaps its window.
.TP 8
.B SIGBUS
On a BUS signal, \fIconsole\fR dumps core.
.SH OPTIONS
\fIConsole\fR accepts a subset of the standard X Toolkit command line
options, namely: -display, -geometry, -bg, -background, -bd,
-bordercolor, -bw, -borderwidth, -fg, -foreground, -fn, -font, -name,
\(+-rv, \(+-reverse, \(+-iconic, -icongeometry, -xrm. See X(1) for
details on these options.

\fIConsole\fR accepts five additional options:
.TP 8
.B \-blink \fImilliseconds\fR
This option specifies the blink frequency in milliseconds of
\fIconsole\fR's icon. If \fIconsole\fR is iconified, and its
icon window is visible, it will blink its icon at this frequency
when there is new output to be displayed, rather than mapping
itself. The default frequency is 1000 milliseconds (1 second).
The minimum frequency is 100 milliseconds.
.TP 8
.B \-unmap \fIseconds\fR
If this option is specified and nonzero, \fIconsole\fR will
automatically unmap itself after this many seconds of no output.
"-unmap 10" for example will cause the window to disappear
by itself 10 seconds after it appears with new input, saving the user 
from continually having to click the "Hide" button while working.
.TP 8
.B \(+-map
This option specifies whether the console window should start up mapped
(visible).  -map causes the window to start mapped, +map causes
\fIconsole\fR to wait until there is input before mapping the window on 
the screen.  Starting unmapped is the default.
.TP 8
.B \-global
When specified, this option causes \fIconsole\fR to place a
_SGI_DESKS_HINTS property on its window, with the contents
_SGI_DESKS_ALWAYS_GLOBAL. This is only useful when the console
window is running with SGI's 4Dwm window manager, where it will
cause the console to appear on all desks (if desks are in use).
.TP 8
.B \-nosession
This option causes \fIconsole\fR not to place a WM_COMMAND property
on its window. This is needed to prevent session managers
(such as SGI's 4Dwm window manager) from attempting to start up \fIconsole\fR
themselves when it is being used as the system console window.
.SH X RESOURCES
Since \fIconsole\fR is normally started up before the user's resources
have been read into the server, it does not have the chance to read the
user's preferences.  If the user wishes \fIconsole\fR to use her
resources, she may run the program \fIconfig_console\fR. See the man
page for \fIconfig_console\fR for more information.

\fIConsole\fR understands the following resources:
.TP 8
.B *foreground
This is the same as the -fg option.
.TP 8
.B *background
This is the same as the -bg option.
.TP 8
.B *reverseVideo
This is the same as the \(+-rv option. Specify True or False.
.TP 8
.B *font
This is the same as the -fn option.
.TP 8
.B *borderWidth
This is the same as the -bw option.
.TP 8
.B *borderColor
This is the same as the -bd option.
.TP 8
.B Console*window.geometry
This is the same as the -geometry option.
.TP 8
.B Console*iconWindow.geometry
This is the same as the -icongeometry option.
.TP 8
.B Console*frequency
This is the same as the -blink option.
.TP 8
.B Console*autoUnmap
This is the same as the -unmap option.
.TP 8
.B Console*window.mapped
This is the same as \(+-map. Specify True or False.
.TP 8
.B Console*window.iconic
This is the same as \(+-iconic. Specify True or False.
.TP 8
.B Console*window.global
This is the same as \-global. Specify True or False.
.TP 8
.B Console*window.showCommand
This is the same as \-nosession (which sets this to False).
.SH SELECTING TEXT
Console provides the ability to select text from the window for "pasting"
into other applications (xterm, emacs, etc.).  The method for "cutting"
text closely emulates the behavior of xterm.
.PP
Mouse-buttons one and three are used to select text.  Move the
mouse-pointer to the beginning of the region you wish to select.  Press
and hold down button one, and drag the mouse to the end of the region
you wish to select, and release button one.  The current selection will
be highlighted as you drag the mouse.
.PP
Alternatively, you can set the beginning of the region by clicking
mouse-button one and then using mouse-button three to extend the
selection.
.PP
Mouse-button three "extends" the current selection.  The selection is
expanded or contracted from the edge closest to the mouse-pointer.
Holding down the mouse-button while extending the selection allows you
to "drag" out an extension.
.PP
Text can be selected in one of five "modes".  Clicking the mouse button
rapidly cycles through the modes.  Double-clicking selects by words.
Triple-clicking selects by lines.  Quad-clicking selects by paragraph,
where a paragraph break is defined by a blank line.  Quint-clicking
selects the entire text of the console.
.SH USING THE SCROLLBAR
The scrollbar thumb (the white rectangle over a gray background)
displays the range of text visible in relation to the total amount of
text in the console.
.PP
Clicking button one in the scroll-region scrolls the text up by the
number of lines above the pointer.  That is, the closer the the pointer
is to the bottom of the scroll region, the more the text will scroll.
.PP
Clicking button three in the scroll-region scrolls the text down by the
number of lines above the pointer, in the same way that button one
scrolls up.
.PP
Clicking button two in the scroll-region scrolls the console to the place
in the text that corresponds to the pointer's position in the scrollbar.
The thumb may be "dragged" by pressing mouse-button two in the
scroll-region and moving the mouse while the mouse-button is
depressed.
.SH FILES
.PP
/var/athena/console.log    console log file
.br
/etc/athena/login/Console  application defaults
.br
/var/athena/console.pid    pid of console, if started by \fIdm\fR
.SH "SEE ALSO"
X(1), config_console(1), show_console(1), hide_console(1), dm(8), nanny(8),
xrdb(1)
.SH "BUGS"
\fIConsole\fR may sometimes unmap its window (if -unmap is specified)
while you are reading it.  Moving the scrollbar before the specified timeout
will prevent this.

\fIConsole\fR should provide more control over its mapping and blinking
icon abilities.

Variable-width fonts are not supported.

Quad-clicking effectively selects the entire console text, since it all
appears to be one paragraph; the time-stamping at the beginning of each
line leaves no blank lines, thus the entire text is one paragraph.
.SH AUTHORS
Craig Fields and Chris VanHaren, MIT Project Athena
.br
Copyright (c) 1990-1995 Massachusetts Institute of Technology
